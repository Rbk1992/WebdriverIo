const LoginPage = require('../../pageobjects/login.page.js')
const RegistrationPage = require('../../pageobjects/register.page.js')
const HomePage = require('../../pageobjects/home.page.js')
const SearchPage = require('../../pageobjects/search.page.js')
const ProductDetailsPage = require('../../pageobjects/productDetails.page.js')
const AddToCartModalPage = require('../../pageobjects/addToCartModal.page.js')
const ShoppingCartSummaryPage = require('../../pageobjects/shoppingCartSummary.page.js')
const AddressPage = require('../../pageobjects/address.page.js')
const ShippingPage = require('../../pageobjects/shipping.page.js')
const PaymentsPage = require('../../pageobjects/payments.page.js')
const testData = require('../../data/register.json')
const shippingPage = require('../../pageobjects/shipping.page.js')


describe('Your Logo Application', () => { 

    it('TC_1.1:Try to create an account with already registered user', () => {
        LoginPage.clickSignIn()
        LoginPage.verifyLanding()
        LoginPage.enterExistingEmail(testData['TC_1.1'].registeredEmail)
        LoginPage.validateError(testData['TC_1.1'].errMsg)
    })
    
    it('TC_1.2:Register user to the website and validate user name on landing screen: Only mandatory fields are entered', () => {
        LoginPage.clickSignIn()
        var email = LoginPage.registerUserToWebsite(testData['TC_1.2'].userDetails.email)
        RegistrationPage.verifyLanding()
        RegistrationPage.enterUserDetails(testData['TC_1.2'].userDetails, email)
        RegistrationPage.clickOnRegister()
        HomePage.verifyLanding()
        HomePage.verifyLinksOnMyAccount(testData['TC_1.2'].myAccountLinks)
        HomePage.validateUserName(testData['TC_1.2'].userDetails)
        HomePage.clickLogout()
    })

    it('TC_1.3:Register user to the website and validate user name on landing screen', () => {
        LoginPage.clickSignIn()
        var email = LoginPage.registerUserToWebsite(testData['TC_1.3'].userDetails.email)
        RegistrationPage.verifyLanding()
        RegistrationPage.enterUserDetails(testData['TC_1.3'].userDetails, email)
        RegistrationPage.clickOnRegister()
        HomePage.verifyLanding()
        HomePage.validateUserName(testData['TC_1.3'].userDetails)
        HomePage.clickLogout()
    })

    it('TC_1.4:Add product to the cart using already registered user and validate product details on payment page', () => {
        LoginPage.clickSignIn()
        LoginPage.verifyLanding()
        LoginPage.loginToApplication(testData['TC_1.4'].userDetails)
        HomePage.verifyLanding()    
        HomePage.validateUserName(testData['TC_1.4'].userDetails)
        HomePage.validateCartisEmpty()
        HomePage.mouseHoverToWomenLink()
        HomePage.clickOnTshirtsLink()
        SearchPage.verifyNavigationToTshirtsPage()
        SearchPage.clickOnProduct(testData['TC_1.4'].productDetails.product)
        ProductDetailsPage.verifyLandingOnProductDetailsPage()
        ProductDetailsPage.enterProductDetails(testData['TC_1.4'].productDetails)
        const prodDetailsArray = ProductDetailsPage.captureProductDetails()
        ProductDetailsPage.clickOnAddToCart()
        AddToCartModalPage.validateProductIsAddedToCart()
        AddToCartModalPage.clickProceedToCheckOutLink()
        ShoppingCartSummaryPage.verifyLanding()
        ShoppingCartSummaryPage.clickProceedToCheckOutLink()
        AddressPage.verifyLanding()
        AddressPage.clickProceedToCheckOutLink()
        ShippingPage.verifyLanding()
        const shipPrice = ShippingPage.getShippingPrice()
        shippingPage.selectTermsOfServiceCheckBox()
        shippingPage.clickProceedToCheckOutLink()
        PaymentsPage.verifyLanding()
        PaymentsPage.verifyProductDetailsOnPaymentsPage(prodDetailsArray,shipPrice) 
        HomePage.clickLogout()      
    })

});